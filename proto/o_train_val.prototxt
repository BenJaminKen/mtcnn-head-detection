name: "oNet"
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  top: "bbox"
  top: "landmark"
  top: "bbox_mask"
  top: "landmark_mask"
  python_param {
    module: "layers.jfda_data_layer"
    layer: "JfdaDataLayer"
    param_str: '{'
               '  "net_type": "o",'
               '  "shuffle": true,'
               '  "face_db_name": "data/onet_face_train",'
               '  "landmark_db_name": "data/onet_landmark_train",'
               '  "nonface_db_name": "data/onet_nonface_train",'
               '  "face_batch_size": 256,'
               '  "landmark_batch_size": 256,'
               '  "nonface_batch_size": 1024'
               '}'
  }
  include {
    phase: TRAIN
  }
}
layer {
  name: "data"
  type: "Python"
  top: "data"
  top: "label"
  top: "bbox"
  top: "landmark"
  top: "bbox_mask"
  top: "landmark_mask"
  python_param {
    module: "layers.jfda_data_layer"
    layer: "JfdaDataLayer"
    param_str: '{'
               '  "net_type": "o",'
               '  "shuffle": true,'
               '  "face_db_name": "data/onet_face_val",'
               '  "landmark_db_name": "data/onet_landmark_val",'
               '  "nonface_db_name": "data/onet_nonface_val",'
               '  "face_batch_size": 256,'
               '  "landmark_batch_size": 256,'
               '  "nonface_batch_size": 1024'
               '}'
  }
  include {
    phase: TEST
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 32
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    kernel_size: 2
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}

layer {
  name: "fc"
  type: "InnerProduct"
  bottom: "conv4"
  top: "fc"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "fc"
  top: "fc"
}

# face label
layer {
  name: "face_label"
  type: "InnerProduct"
  bottom: "fc"
  top: "face_label"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
# face bbox
layer {
  name: "face_bbox"
  type: "InnerProduct"
  bottom: "fc"
  top: "face_bbox"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 3
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
# face landmark
layer {
  name: "face_landmark"
  type: "InnerProduct"
  bottom: "fc"
  top: "face_landmark"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}

# mask identity
layer {
  name: "bbox_mask_identity"
  type: "MaskIdentity"
  bottom: "face_bbox"
  bottom: "bbox"
  bottom: "bbox_mask"
  top: "bbox_refined"
}
layer {
  name: "landmark_mask_identity"
  type: "MaskIdentity"
  bottom: "face_landmark"
  bottom: "landmark"
  bottom: "landmark_mask"
  top: "landmark_refined"
}

# loss
layer {
  name: "face_label_loss"
  type: "SoftmaxWithLoss"
  bottom: "face_label"
  bottom: "label"
  top: "face_loss"
  loss_weight: 1
}
layer {
  name: "face_label_accuracy"
  type: "Accuracy"
  bottom: "face_label"
  bottom: "label"
  top: "face_label_accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "face_bbox_loss"
  type: "EuclideanLoss"
  bottom: "face_bbox"
  bottom: "bbox_refined"
  top: "bbox_loss"
  loss_weight: 0.5
}
layer {
  name: "face_landmark_loss"
  type: "EuclideanLoss"
  bottom: "face_landmark"
  bottom: "landmark_refined"
  top: "landmark_loss"
  loss_weight: 1
}
